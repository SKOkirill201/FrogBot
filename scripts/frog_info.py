from aiogram import Bot, types
from other.commands import all_commands

async def frog_info_commands(bot: Bot, message: types.Message, users_: dict, config: dict):
    if str(message.text).lower() in all_commands['my_frog']:
        if users_[str(message.from_user.id)]['have_frog'] == True:
            print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–π –ª—è–≥—É—à–∫–µ')
            if message.from_user.username.lower() in ('', None, '@', 'none'):
                user_frog = f'–í–∞—à–∞ –ª—è–≥—É—à–∫–∞'
            else:
                user_frog = f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <a href="t.me/{message.from_user.username}">{message.from_user.username}</a>'
            ranks_values = {
                '1': '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π',
                '2': '–ö–∞–º–µ–Ω–Ω—ã–π',
                '3': '–ú–µ–¥–Ω—ã–π',
                '4': '–ë—Ä–æ–Ω–∑–æ–≤—ã–π',
                '5': '–ñ–µ–ª–µ–∑–Ω—ã–π',
                '6': '–ó–æ–ª–æ—Ç–æ–π',
                '7': '–ê–ª–º–∞–∑–Ω—ã–π',
                '8': '–ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–π',
                '9': '–ü—Ä–µ–º–∏—É–º ‚≠ê'
            }
            
            text1 = '\nüßµ –ü—Ä–µ–¥–º–µ—Ç—ã'
            items = f''''''
            items_count = 0

            for item in list(users_[str(message.from_user.id)]['frog']['items'].keys()):
                print()
                if users_[str(message.from_user.id)]['frog']['items'][item]['player_has'] == True:
                    level = users_[str(message.from_user.id)]['frog']['items'][item]['level']
                    text = config['items'][item]
                    items += f'\n - {text} {level} —É—Ä–æ–≤–Ω—è'
                    items_count += 1
            itemstext = f'({items_count}):'
            if items == f'''''':
                items = ''
                text1 = ''
                itemstext = ''
            
            if users_[str(message.from_user.id)]['frog']['is_alive'] == True: alive = '–õ—è–≥—É—à–∫–∞ –≤ –ø–æ–ª–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ!'
            else: alive = '–õ—è–≥—É—à–∫–µ –Ω—É–∂–Ω–∞ –∞–ø—Ç–µ—á–∫–∞'
            await bot.send_message(message.chat.id, 
                            f'''{user_frog}:
<b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>
üè∑ –ò–º—è: {users_[str(message.from_user.id)]['frog']['frog_name']}
‚ù§ –ó–¥–æ—Ä–æ–≤—å–µ: {alive}
<b>–ï–¥–∞</b>
üçü –ï–¥–∞ –¥–ª—è –ª—è–≥—É—à–∫–∏:
- üï∑ –ü–∞—É–∫–∏: {users_[str(message.from_user.id)]['user']['food']['spiders']}
- üêú –ú—É—Ä–∞–≤—å–∏: {users_[str(message.from_user.id)]['user']['food']['ants']}
- ü™≤ –ñ—É–∫–∏: {users_[str(message.from_user.id)]['user']['food']['bugs']}
üç™ –°—ã—Ç–æ—Å—Ç—å: {users_[str(message.from_user.id)]['frog']['frog_satiety']}/10
<b>–í–∞–ª—é—Ç—ã</b>
üí∏ –ö–æ–∏–Ω—ã: {users_[str(message.from_user.id)]['user']['money']}
<b>–î—Ä—É–≥–æ–µ</b>
üéñ –†–∞–Ω–≥: {ranks_values[str(users_[str(message.from_user.id)]['frog']['rank'])]}{text1} {itemstext} {items}''',
                            message_thread_id=message.message_thread_id,
                            parse_mode=types.ParseMode.HTML)
        else:
            await bot.send_message(message.chat.id, 
                            '–£ –≤–∞—Å –Ω–µ—Ç—É –ª—è–≥—É—à–∫–∏!',
                            message_thread_id=message.message_thread_id)

    elif str(message.text).lower() in all_commands['my_balance']:
        print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –ø–æ—Å–º–æ—Ç—Ä–µ–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å')
        money = users_[str(message.from_user.id)]['user']['money']
        rmoney = round(money)
        await bot.send_message(message.chat.id, 
                        f'–í–∞—à –±–∞–ª–∞–Ω—Å: {rmoney} –∫–æ–∏–Ω–æ–≤ üí∏',
                        message_thread_id=message.message_thread_id)

    elif str(message.text).lower() in all_commands['balance']:
        replym = message.reply_to_message
        idd = replym.from_user.id
        money = users_[str(idd)]['user']['money']
        rmoney = round(money)
        try:
            print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –ø–æ—Å–º–æ—Ç—Ä–µ–ª –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {idd}')
            await bot.send_message(message.chat.id,
                               f'–ë–∞–ª–∞–Ω—Å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {rmoney}',
                               message_thread_id=message.message_thread_id,
                               reply_to_message_id=replym.message_id)
        except Exception as e:
            print(e)
            await bot.send_message(message.chat.id,
                               f'–ë–∞–ª–∞–Ω—Å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {rmoney}',
                               reply_to_message_id=replym.message_id)