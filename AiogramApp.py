# Aiogram import | –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Aiogram
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup as KMarkup, InlineKeyboardButton as Button

# Other imports | –î—Ä—É–≥–∏–µ –∏–º–ø–æ—Ä—Ç—ã
from random import choice, randint
from asyncio import sleep
from colorama import init, Fore
import json
import logging

# Custom scripts imports | –ò–º–ø–æ—Ä—Ç—ã –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
from users.save import save_to_json
from scripts.fb_ff import *
from scripts.change_name import *
from scripts.frog_info import *
from scripts.not_frog_commands import *
from scripts.main_commands import *
from scripts.work_commands import *
from scripts.admin_commands import *
from utilities.work import *
from scripts.cases import *
from scripts.buy_food import *

init(autoreset=True)

with open('config.json', encoding='utf-8') as alll:
    config = json.load(alll)
    
    token = config['token']

with open('users/users.json', encoding='utf-8') as users: users_ = json.load(users)
with open('other/chats.json', encoding='utf-8') as f: chats = json.load(f)

bot = Bot(token=token)
dp = Dispatcher(bot)

blue = Fore.BLUE
yellow = Fore.YELLOW
cyan = Fore.CYAN

# –ö–æ–º–∞–Ω–¥—ã
@dp.message_handler()
async def messages(message: types.Message):
    await not_frog(bot, message, users_)
    await main(bot, message, users_)
    await work(bot, message, users_, config)
    await frog_info_commands(bot, message, users_, config)
    await admin(bot, message, users_, config)
    await open_case(bot, message, users_, config)

    save_to_json('users/users.json', users_)
    save_to_json('other/chats.json', chats)

# Feeding frog | –ö–æ—Ä–º–∏–º –ª—è–≥—É—à–∫—É
# Ant | –ú—É—Ä–∞–≤–µ–π
@dp.callback_query_handler(text = 'fb_ff_ant')
async def ff_ant(callback: types.CallbackQuery):
    await fb_ff(callback, bot, users_, 1, 'ants')
    print(f'{yellow}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–∫–æ—Ä–º–∏–ª –ª—è–≥—É—à–∫—É –º—É—Ä–∞–≤—å—ë–º')
# Spider | –ü–∞—É–∫
@dp.callback_query_handler(text = 'fb_ff_spider')
async def ff_spider(callback: types.CallbackQuery):
    await fb_ff(callback, bot, users_, 3, 'spiders')
    print(f'{yellow}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–∫–æ—Ä–º–∏–ª –ª—è–≥—É—à–∫—É –ø–∞—É–∫–æ–º')
# Bug | –ñ—É–∫
@dp.callback_query_handler(text = 'fb_ff_bug')
async def ff_bug(callback: types.CallbackQuery):
    await fb_ff(callback, bot, users_, 2, 'bugs')
    print(f'{yellow}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–∫–æ—Ä–º–∏–ª –ª—è–≥—É—à–∫—É –∂—É–∫–æ–º')

# Negotiate with the police | –î–æ–≥–æ–≤–æ—Ä —Å –ø–æ–ª–∏—Ü–∏–µ–π
# 300 coins
@dp.callback_query_handler(text = 'fb_nwtp_300c')
async def ff_bug(callback: types.CallbackQuery):
    await negotiate(bot, callback.message, users_, 300, callback)
    print(f'{cyan}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ü–∏–µ–π –∑–∞ 300 –∫–æ–∏–Ω–æ–≤')
# 500 coins
@dp.callback_query_handler(text = 'fb_nwtp_500c')
async def ff_bug(callback: types.CallbackQuery):
    await negotiate(bot, callback.message, users_, 500, callback)
    print(f'{cyan}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ü–∏–µ–π –∑–∞ 500 –∫–æ–∏–Ω–æ–≤')
# 750 coins
@dp.callback_query_handler(text = 'fb_nwtp_750c')
async def ff_bug(callback: types.CallbackQuery):
    await negotiate(bot, callback.message, users_, 750, callback)
    print(f'{cyan}–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ü–∏–µ–π –∑–∞ 750 –∫–æ–∏–Ω–æ–≤')

@dp.callback_query_handler(text = 'fb_w_office_worker')
async def office_worker(callback: types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['frog']['frog_on_work'] == False:
        if users_[str(callback.from_user.id)]['frog']['frog_satiety'] >= 1:
            if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º')
                await bot.send_message(message.chat.id, 
                                 '''–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º üê∏! –ü–æ–∂–µ–ª–∞–π—Ç–µ –µ–π —É–¥–∞—á–∏ üçÄ!

üïî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, –∫–∞–∫ –ø—Ä–æ—à—ë–ª —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                                 message_thread_id=message.message_thread_id)
                    
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True
                results = ('successful', 'successful', 'successful', 'error', 'escape')
                result = choice(results)
                await sleep(180)
                users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1
                if result == 'successful':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º.')
                    what_frog_do = choice(('—Å–æ—Å—Ç–∞–≤–ª—è—è –æ—Ç—á—ë—Ç—ã', '–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –∫–ª–∏–µ–Ω—Ç–∞–º'))
                    add = randint(100, 175)
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                        addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd
                    if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                        addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd

                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        add_r = add * int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank'])]))
                        users_[str(callback.from_user.id)]['user']['money'] += add_r
                    users_[str(callback.from_user.id)]['user']['money'] += add
                    text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å {what_frog_do}.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True or users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += '\n–ë–æ–Ω—É—Å—ã:'
                    if addd != 0:
                        text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ (–ü—Ä–µ–¥–º–µ—Ç—ã)'
                    if add_r != 0:
                        text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'

                elif result == 'error':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —Å–æ–≤–µ—Ä—à–∏–ª–∞ –æ—à–∏–±–∫—É –Ω–∞ —Ä–∞–±–æ—Ç–µ –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º')
                    text = '–û –Ω–µ—Ç! –í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —Å–æ–≤–µ—Ä—à–∏–ª–∞ –æ—à–∏–±–∫—É –∏ –µ—ë —É–≤–æ–ª–∏–ª–∏! –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏!'
                elif result == 'escape':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —Å–±–µ–∂–∞–ª–∞ —Å —Ä–∞–±–æ—Ç—ã')
                    text = '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —Ä–µ—à–∏–ª–∞ —Å–±–µ–∂–∞—Ç—å —Å —Ä–∞–±–æ—Ç—ã... –ò —É –Ω–µ—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å! –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏.'
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False
                await bot.send_message(message.chat.id,
                                 text,
                                 message_thread_id=message.message_thread_id)
        
            else:
                await bot.send_message(message.chat.id,
                                       '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                                       message_thread_id=message.message_thread_id)
    
        else:   
            await bot.send_message(message.chat.id,
                                   '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≥–æ–ª–æ–¥–Ω–∞ ü¶¥!',
                                   message_thread_id=message.message_thread_id)
    
    else:
        await bot.send_message(message.chat.id,
                               '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É–∂–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ!',
                               message_thread_id=message.message_thread_id)

    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text = 'fb_w_thief')
async def robber(callback: types.CallbackQuery):
    async def work(message: types.Message, bot: Bot, users_: dict, config: dict):
        if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
            users_[str(callback.from_user.id)]['frog']['has_been_thief'] = True
            print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –≥—Ä–∞–±–∏—Ç–µ–ª–µ–º')
            await bot.send_message(message.chat.id,
                             '''üîë –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –≥—Ä–∞–±–∏—Ç–µ–ª–µ–º! –í—ã —Å–æ—à–ª–∏ —Å —É–º–∞?! –û–Ω–∞ –∂–µ –º–æ–∂–µ—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —Ç—é—Ä—å–º—É!

üïî –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                                 message_thread_id=message.message_thread_id)
                    
            users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True
            if users_[str(callback.from_user.id)]['frog']['items']['golden_gloves'] == False:
                results = ('successful', 'successful', 'successful', 'cops', 'cops', 'cops', 'cops', 'cops', 'cops', 'cops')
            else:
                results = ('successful', 'successful', 'successful', 'successful', 'successful', 'successful', 'successful', 'cops', 'cops', 'cops')
            result = choice(results)
            await sleep(180)
            users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1
            if result == 'successful':
                what_frog_robbed = choice(('–∞–ø—Ç–µ–∫—É', '–∞–ø—Ç–µ–∫—É', '–∞–ø—Ç–µ–∫—É', '–º—É–∑–µ–π', '–º—É–∑–µ–π', '–º—É–∑–µ–π', '–¥–æ–º', '–¥–æ–º', '–¥–æ–º', '–¥–æ–º', '–±–∞–Ω–∫'))
                if what_frog_robbed == '–∞–ø—Ç–µ–∫—É': add = randint(225, 290)
                if what_frog_robbed == '–¥–æ–º': add = randint(150, 375)
                if what_frog_robbed == '–±–∞–Ω–∫': add = randint(375, 500)
                if what_frog_robbed == '–º—É–∑–µ–π': add = randint(475, 550)
                print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∞ {what_frog_robbed}')

                if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                    addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                    addd -= add
                    addd = round(addd)
                    users_[str(callback.from_user.id)]['user']['money'] += addd
                if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                    addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                    addd -= add
                    addd = round(addd)
                    users_[str(callback.from_user.id)]['user']['money'] += addd
                if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                    add_r = add * int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank'])]))
                    users_[str(callback.from_user.id)]['user']['money'] += add_r
                users_[str(callback.from_user.id)]['user']['money'] += add
                text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∞ {what_frog_robbed}.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                if addd != 0:
                    text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ (–ü—Ä–µ–¥–º–µ—Ç—ã)'
                if add_r != 0:
                    text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'

                elif result == 'cops':
                    users_[str(callback.from_user.id)]['frog']['frog_in_jail'] = True
                    users_[str(callback.from_user.id)]['frog']['has_been_in_jail'] = True
                    users_[str(callback.from_user.id)]['frog']['can_be_cop_after_thief'] = False
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} –ø–æ–ø–∞–ª–∞—Å—å –ø–æ–ª–∏—Ü–∏–∏')
                    text = '–û –Ω–µ—Ç! –í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø–æ–ø–∞–ª–∞—Å—å –ø–æ–ª–∏—Ü–∏–∏ –∏ –µ—ë –ø–æ—Å–∞–¥–∏–ª–∏ –≤ —Ç—é—Ä—å–º—É! üò±'
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False
                await bot.send_message(message.chat.id, 
                                 text,
                                 message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, 
                             '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                             message_thread_id=message.message_thread_id)
        
    await work_template(bot, callback, work, users_, 0, config)

@dp.callback_query_handler(text = 'fb_w_cleaner')
async def cleaner(callback: types.CallbackQuery):
    async def work(message: types.Message, bot: Bot, users_: dict, config: dict):
        print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É —É–±–æ—Ä—â–∏–∫–æ–º')
        await bot.send_message(message.chat.id, '''–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É —É–±–æ—Ä—â–∏–∫–æ–º üßπ!

üïî –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                                     message_thread_id=message.message_thread_id)
        users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True
        await sleep(180)
        users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1
        add = randint(50, 75)
        addd = 0
        add_r = 0
        if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
            addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
            addd -= add
            addd = round(addd)
            users_[str(callback.from_user.id)]['user']['money'] += addd
        if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
            addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
            addd -= add
            addd = round(addd)
            users_[str(callback.from_user.id)]['user']['money'] += addd
        if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
            add_r = add * int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank'])]))
            users_[str(callback.from_user.id)]['user']['money'] += add_r
        users_[str(callback.from_user.id)]['user']['money'] += add
        text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —É–±–æ—Ä—â–∏–∫–æ–º, –µ–π –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –∫–æ–ø–µ–π–∫–∏.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
        if addd != 0 or add_r != 0:
            text += '\n–ë–æ–Ω—É—Å—ã:'

        if addd != 0:
            text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ (–ü—Ä–µ–¥–º–µ—Ç—ã)'
        if add_r != 0:
            text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'
        
        users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False

        print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —É–±–æ—Ä—â–∏–∫–æ–º')
        await bot.send_message(message.chat.id,
                               text,
                               message_thread_id=message.message_thread_id)
    
    await work_template(bot, callback, work, users_, 0, config)
    
    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text = 'fb_w_cook')
async def cook(callback: types.CallbackQuery):
    message = callback.message
    async def work(message: types.Message, bot: Bot, users_: dict, config: dict):
        if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
            print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –ø–æ–≤–∞—Ä–æ–º')
            await bot.send_message(message.chat.id, '''–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –ø–æ–≤–∞—Ä–æ–º üë®‚Äçüç≥!

üïî –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                                           message_thread_id=message.message_thread_id)
                    
            users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True

            await sleep(180)

            results = (
                '—É—Å–ø–µ—à–Ω–æ',
                '—É—Å–ø–µ—à–Ω–æ',
                '—É—Å–ø–µ—à–Ω–æ',
                '–æ–±–æ–∂–≥–ª–∞—Å—å',
                '–æ–±–æ–∂–≥–ª–∞—Å—å',
                '–Ω–µ–¥–æ–∂–∞—Ä–∏–ª–∞—Å—å',
                '–ø–æ–¥–≥–æ—Ä–µ–ª–∞',
                '—Å–≥–æ—Ä–µ–ª–∞',
                '—Å–≥–æ—Ä–µ–ª–∞',
                '–ø—Ä–æ—Å—Ä–æ—á–∫–∞'
            )

            result = choice(results)

            users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1

            if result == '—É—Å–ø–µ—à–Ω–æ':
                print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –±–ª—é–¥–æ')
                add = randint(100, 275)
                if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                    addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                    addd -= add
                    addd = round(addd)
                    users_[str(callback.from_user.id)]['user']['money'] += addd
                    print(addd)
                if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                    addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                    addd -= add
                    addd = round(addd)
                    users_[str(callback.from_user.id)]['user']['money'] += addd
                    print(addd)

                if users_[str(callback.from_user.id)]['frog']['rank'] not in [1, 2]:
                    rm = int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank']-1)]))
                    print(rm)
                    add_r = add * rm
                    users_[str(callback.from_user.id)]['user']['money'] += add_r
                users_[str(callback.from_user.id)]['user']['money'] += add
                text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –±–ª—é–¥–æ.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                if addd != 0:
                    text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ (–ü—Ä–µ–¥–º–µ—Ç—ã)'
                if add_r != 0:
                    text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'
                
            elif result == '–Ω–µ–¥–æ–∂–∞—Ä–∏–ª–∞—Å—å':
                client = choice(['–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–Ω–µ –∑–∞–º–µ—Ç–∏–ª', '–Ω–µ –∑–∞–º–µ—Ç–∏–ª', '–Ω–µ –∑–∞–º–µ—Ç–∏–ª', '–Ω–µ –∑–∞–º–µ—Ç–∏–ª'])
                if client == '–∑–∞–º–µ—Ç–∏–ª':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –Ω–µ–¥–æ–∂–∞—Ä–∏–ª–∞ –±–ª—é–¥–æ –∏ –µ—ë —É–≤–æ–ª–∏–ª–∏')
                    text = '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ–¥–æ–∂–∞—Ä–∏–ª–∞ –±–ª—é–¥–æ, –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ –∑–∞–º–µ—Ç–∏–ª –∏ –µ—ë —É–≤–æ–ª–∏–ª–∏.'
                elif client == '–Ω–µ –∑–∞–º–µ—Ç–∏–ª':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –±–ª—é–¥–æ –Ω–µ–¥–æ–∂–∞—Ä–µ–Ω–Ω—ã–º, –Ω–æ –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ–≥–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª.')
                    add = randint(50, 175)
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                        addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd
                    if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                        addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd

                    if users_[str(callback.from_user.id)]['frog']['rank'] not in [1, 2]:
                        rm = int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank']-1)]))
                        print(rm)
                        add_r = add * rm
                        users_[str(callback.from_user.id)]['user']['money'] += add_r
                    users_[str(callback.from_user.id)]['user']['money'] += add
                    text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ–¥–æ–∂–∞—Ä–∏–ª–∞ –±–ª—é–¥–æ, –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ–≥–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª, –Ω–æ –≤–∞–º –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –º–µ–Ω—å—à–µ.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True or users_[str(callback.from_user.id)]['frog']['rank'] != 1 and users_[str(callback.from_user.id)]['frog']['items']['magic_coin']['player_has']:
                        text += '\n–ë–æ–Ω—É—Å—ã:'

                    for item in config['items_l']:
                        if users_[str(callback.from_user.id)]['frog']['items'][item]['player_has'] == True:
                            is_add = True
                            break
                    if is_add == True:
                        item_name = config['items_m'][item]
                    text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ {item_name}'
                    if users_[str(callback.from_user.id)]['frog']['rank'] in [1, 2]:
                        text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'
                
            elif result == '–ø–æ–¥–≥–æ—Ä–µ–ª–∞':
                client = choice(['–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–∑–∞–º–µ—Ç–∏–ª', '–Ω–µ –∑–∞–º–µ—Ç–∏–ª', '–Ω–µ –∑–∞–º–µ—Ç–∏–ª'])
                if client == '–∑–∞–º–µ—Ç–∏–ª':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –ø–µ—Ä–µ–∂–∞—Ä–∏–ª–∞ –±–ª—é–¥–æ, –µ—ë —É–≤–æ–ª–∏–ª–∏.')
                    text = '–ë–ª—é–¥–æ –≤–∞—à–µ–π –ª—è–≥—É—à–∫–∏ –ø–æ–¥–≥–æ—Ä–µ–ª–æ, –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ –∑–∞–º–µ—Ç–∏–ª –∏ –µ—ë —É–≤–æ–ª–∏–ª–∏'
                elif result == '–Ω–µ –∑–∞–º–µ—Ç–∏–ª':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –±–ª—é–¥–æ –ø–µ—Ä–µ–∂–∞—Ä–µ–Ω–Ω—ã–º, –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ–≥–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª.')
                    add = randint(25, 100)
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                        addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd
                    if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                        addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd

                    if users_[str(callback.from_user.id)]['frog']['rank'] not in [1, 2]:
                        rm = int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank']-1)]))
                        print(rm)
                        add_r = add * rm
                        users_[str(callback.from_user.id)]['user']['money'] += add_r
                    users_[str(callback.from_user.id)]['user']['money'] += add
                    text = f'''–£ –≤–∞—à–µ–π –ª—è–≥—É—à–∫–∏ –ø–æ–¥–≥–æ—Ä–µ–ª–æ –±–ª—é–¥–æ, –∫–ª–∏–µ–Ω—Ç —ç—Ç–æ–≥–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª, –Ω–æ –≤–∞–º –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –º–µ–Ω—å—à–µ.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True or users_[str(callback.from_user.id)]['frog']['rank'] != 1 and users_[str(callback.from_user.id)]['frog']['items']['magic_coin']['player_has']:
                        text += '\n–ë–æ–Ω—É—Å—ã:'
    
                    for item in config['items_l']:
                        if users_[str(callback.from_user.id)]['frog']['items'][item]['player_has'] == True:
                            is_add = True
                            break
                    if is_add == True:
                        item_name = config['items_m'][item]
                    text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ {item_name}'
                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'
                
            elif result == '—Å–≥–æ—Ä–µ–ª–∞':
                print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —Å–æ–∂–≥–ª–∞ –±–ª—é–¥–æ, –µ—ë —É–≤–æ–ª–∏–ª–∏')
                text = '–ë–ª—é–¥–æ –≤–∞—à–µ–π –ª—è–≥—É—à–∫–∏ —Å–≥–æ—Ä–µ–ª–æ, –µ—ë —É–≤–æ–ª–∏–ª–∏'
                
            elif result == '–ø—Ä–æ—Å—Ä–æ—á–∫–∞':
                print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –±–ª—é–¥–æ –∏–∑ –ø—Ä–æ—Å—Ä–æ—á–∫–∏, –µ—ë —É–≤–æ–ª–∏–ª–∏')
                text = '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –±–ª—é–¥–æ –∏–∑ –ø—Ä–æ—Å—Ä–æ—á–∫–∏, –µ—ë —É–≤–æ–ª–∏–ª–∏'
                    
            elif result == '–æ–±–æ–∂–≥–ª–∞—Å—å':
                print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –æ–±–æ–∂–≥–ª–∞—Å—å')
                users_[str(callback.from_user.id)]['frog']['is_alive'] = False
                text = '''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø–æ–ª—É—á–∏–ª–∞ –æ–∂–æ–≥ –≤–æ –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏! –ö–∞–∫–æ–π —É–∂–∞—Å!
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üî• –û–∂–æ–≥ —É –ª—è–≥—É—à–∫–∏ (–ù—É–∂–Ω–∞ –∞–ø—Ç–µ—á–∫–∞)'''

            users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False

            await bot.send_message(message.chat.id,
                                     text,
                                     message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, 
                             '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                             message_thread_id=message.message_thread_id)
    
    await work_template(bot, callback, work, users_, 0, config)
    
    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text = 'fb_w_killer')
async def killer(callback = types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['frog']['rank'] >= 4:
        if users_[str(callback.from_user.id)]['frog']['frog_on_work'] == False:
            if users_[str(callback.from_user.id)]['frog']['frog_satiety'] >= 1:
                if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
                    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É —É–±–∏–π—Ü–µ–π')
                    await bot.send_message(message.chat.id,
                                     '''–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –∫–∏–ª–ª–µ—Ä–æ–º üî™!

üïî –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.
‚Ñπ –ü—Ä–µ–¥–º–µ—Ç—ã –¥–∞—é—â–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ –¥–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ''',
                                     message_thread_id=message.message_thread_id)
                    
                    users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True

                    await sleep(180)

                    results = (
                        '—É—Å–ø–µ—à–Ω–æ',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                        '–ø—Ä–æ–≤–∞–ª',
                    )

                    result = choice(results)

                    users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1

                    if result == '–ø—Ä–æ–≤–∞–ª':
                        print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –ø–æ–ø–∞–ª–∞ –≤ —Ç—é—Ä—å–º—É')
                        users_[str(callback.from_user.id)]['frog']['frog_in_jail'] = True
                        users_[str(callback.from_user.id)]['frog']['has_been_in_jail'] = True
                        users_[str(callback.from_user.id)]['frog']['can_be_cop_after_thief'] = False
                        text = '–û –Ω–µ—Ç! –í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø–æ–ø–∞–ª–∞—Å—å –ø–æ–ª–∏—Ü–∏–∏ –∏ –µ—ë –ø–æ—Å–∞–¥–∏–ª–∏ –≤ —Ç—é—Ä—å–º—É! üò±'
                    if result == '—É—Å–ø–µ—à–Ω–æ':
                        print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –∑–∞–∫–∞–∑...')
                        add = randint(900, 1100)
                        users_[str(callback.from_user.id)]['user']['money'] += add
                        text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–±–∏–ª–∞ –¥—Ä—É–≥—É—é –ª—è–≥—É—à–∫—É.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''

                    users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False

                    await bot.send_message(message.chat.id, 
                                           text,
                                           message_thread_id=message.message_thread_id)

            else:
                await bot.send_message(message.chat.id, 
                                 '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                                 message_thread_id=message.message_thread_id)
        
        else:
            await bot.send_message(message.chat.id, 
                             '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≥–æ–ª–æ–¥–Ω–∞ ü¶¥!',
                             message_thread_id=message.message_thread_id)
            
    else:
        await bot.send_message(message.chat.id,
                               '–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –ø–æ–≤–∞—Ä–æ–º –Ω—É–∂–µ–Ω –º–∏–Ω–∏–º—É–º –∫–∞–º–µ–Ω–Ω—ã–π (2) —Ä–∞–Ω–≥!',
                               message_thread_id=message.message_thread_id)

@dp.callback_query_handler(text = 'fb_u_rank')
async def upgrade_rank(callback: types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['frog']['rank'] < 8:
        cost = {
            '2': 5000,
            '3': 7500,
            '4': 10000,
            '5': 12500,
            '6': 15000,
            '7': 17500,
            '8': 20000
        }
        brank = users_[str(callback.from_user.id)]['frog']['rank'] + 1
        befrank = users_[str(callback.from_user.id)]['frog']['rank']
        if users_[str(callback.from_user.id)]['user']['money'] >= cost[str(brank)]:
            users_[str(callback.from_user.id)]['user']['money'] -= cost[str(brank)]
            users_[str(callback.from_user.id)]['frog']['rank'] += 1
            rankn = users_[str(callback.from_user.id)]['frog']['rank']
            await bot.send_message(message.chat.id,
                                   f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–≤—ã—Å–∏–ª–∏ —Å–≤–æ–π —Ä–∞–Ω–≥! –í–∞—à –ø—Ä–æ—à–ª—ã–π —Ä–∞–Ω–≥: {config["ranks_values"][str(befrank)]}, –≤–∞—à —Ç–µ–∫—É—â–∏–π —Ä–∞–Ω–≥: {config["ranks_values"][str(rankn)]}',
                                   message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id,
                                   f'–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç! –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è —Å—É–º–º–∞: {cost[brank]}.',
                                   message_thread_id=message.message_thread_id)
    else:
        await bot.send_message(message.chat.id,
                               '–£ –≤–∞—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–∞–Ω–≥\! ||–î–∞, –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π __–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π__ —Ä–∞–Ω–≥, —É –Ω–∞—Å —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ–Ω–∞—Ç üòâ||',
                               parse_mode=types.ParseMode.MARKDOWN_V2,
                               message_thread_id=message.message_thread_id)

@dp.callback_query_handler(text='fb_b_case')
async def buy_case(callback: types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['user']['event_items']['has_event_items'] == True:
        if users_[str(callback.from_user.id)]['user']['event_items']['candy_2023'] >= 10:
            users_[str(callback.from_user.id)]['user']['cases'] += 1
            users_[str(callback.from_user.id)]['user']['event_items']['candy_2023'] -= 10 
            await bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –∫–µ–π—Å!', message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≤–µ–Ω—Ç–Ω–æ–π –≤–∞–ª—é—Ç—ã!', message_thread_id=message.message_thread_id)
    else:
        await bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç—É –∏–≤–µ–Ω—Ç–Ω–æ–π –≤–∞–ª—é—Ç—ã', message_thread_id=message.message_thread_id)

    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text='fb_b_food')
async def buy_food(callback: types.CallbackQuery):
    markup = KeyboardMarkup(row_width=1)

    spider = Button(text='üï∑ –ü–∞—É–∫', callback_data='fb_b_f_spider')
    bug = Button(text='ü™≤ –ñ—É–∫', callback_data='fb_b_f_bug')
    ant = Button(text='üêú –ú—É—Ä–∞–≤–µ–π', callback_data='fb_b_f_ant')

    markup.add(spider, bug, ant)

    await bot.send_message(callback.message.chat.id, '–ò—Ç–∞–∫, –≤—ã —Ä–µ—à–∏–ª–∏ –∫—É–ø–∏—Ç—å –µ–¥—É –ª—è–≥—É—à–∫–µ, –Ω–æ –∫–∞–∫—É—é? üêú', reply_markup=markup, message_thread_id=callback.message.message_thread_id)

@dp.callback_query_handler(text='fb_b_f_ant')
async def buy_ant(callback: types.CallbackQuery):
    await buy_item_template(callback, users_, 'ant', 50, bot)
    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text='fb_b_f_spider')
async def buy_spider(callback: types.CallbackQuery):
    await buy_item_template(callback, users_, 'spider', 150, bot)
    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text='fb_b_f_bug')
async def buy_ant(callback: types.CallbackQuery):
    await buy_item_template(callback, users_, 'bug', 100, bot)
    save_to_json('users/users.json', users_)

@dp.callback_query_handler(text='fb_b_first_aid_kit')
async def buy_fak(callback: types.CallbackQuery):
    await buy_item_template(callback, users_, 'fak', 100, bot)
    save_to_json('users/users.json', users_)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)