# Aiogram import | –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Aiogram
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup as KMarkup, InlineKeyboardButton as Button

# Time & Random module import | –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π Random –∏ Time
from time import sleep as pause
from random import choice, randint
from asyncio import sleep

# Json import | –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è Json
import json

# Custom scripts imports | –ò–º–ø–æ—Ä—Ç—ã –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
from users.save import save_to_json
from scripts.fb_ff import *
from scripts.change_name import *
from scripts.frog_info import *
from scripts.not_frog_commands import *
from scripts.main_commands import *
from scripts.work_commands import *
from scripts.admin_commands import *

with open('config.json', encoding='utf-8') as alll:
    config = json.load(alll)
    
    token = config['token']

with open('users/users.json', encoding='utf-8') as users: users_ = json.load(users)
with open('other/chats.json', encoding='utf-8') as f: chats = json.load(f)

bot = Bot(token=token)
dp = Dispatcher(bot)

# –ö–æ–º–∞–Ω–¥—ã
@dp.message_handler()
async def messages(message: types.Message):
    await not_frog(bot, message, users_)
    await main(bot, message, users_)
    await work(bot, message, users_, config)
    await frog_info_commands(bot, message, users_, config)
    await admin(bot, message, users_)

    save_to_json('users/users', users_)
    save_to_json('other/chats', chats)

# Feeding frog | –ö–æ—Ä–º–∏–º –ª—è–≥—É—à–∫—É
# Ant | –ú—É—Ä–∞–≤–µ–π
@dp.callback_query_handler(text = 'fb_ff_ant')
async def ff_ant(callback: types.CallbackQuery):
    await fb_ff(callback, bot, users_, 1, 'ants')
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–∫–æ—Ä–º–∏–ª –ª—è–≥—É—à–∫—É –º—É—Ä–∞–≤—å—ë–º')
# Spider | –ü–∞—É–∫
@dp.callback_query_handler(text = 'fb_ff_spider')
async def ff_spider(callback: types.CallbackQuery):
    await fb_ff(callback, bot, users_, 3, 'spiders')
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–∫–æ—Ä–º–∏–ª –ª—è–≥—É—à–∫—É –ø–∞—É–∫–æ–º')
# Bug | –ñ—É–∫
@dp.callback_query_handler(text = 'fb_ff_bug')
async def ff_bug(callback: types.CallbackQuery):
    await fb_ff(callback, bot, users_, 2, 'bugs')
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–∫–æ—Ä–º–∏–ª –ª—è–≥—É—à–∫—É –∂—É–∫–æ–º')

# Negotiate with the police | –î–æ–≥–æ–≤–æ—Ä —Å –ø–æ–ª–∏—Ü–∏–µ–π
# 300 coins
@dp.callback_query_handler(text = 'fb_nwtp_300c')
async def ff_bug(callback: types.CallbackQuery):
    await negotiate(bot, callback.message, users_, 300, callback)
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ü–∏–µ–π –∑–∞ 300 –∫–æ–∏–Ω–æ–≤')
# 500 coins
@dp.callback_query_handler(text = 'fb_nwtp_500c')
async def ff_bug(callback: types.CallbackQuery):
    await negotiate(bot, callback.message, users_, 500, callback)
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ü–∏–µ–π –∑–∞ 500 –∫–æ–∏–Ω–æ–≤')
# 750 coins
@dp.callback_query_handler(text = 'fb_nwtp_750c')
async def ff_bug(callback: types.CallbackQuery):
    await negotiate(bot, callback.message, users_, 750, callback)
    print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–ø—ã—Ç–∞–ª—Å—è –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ü–∏–µ–π –∑–∞ 750 –∫–æ–∏–Ω–æ–≤')

@dp.callback_query_handler(text = 'fb_w_office_worker')
async def office_worker(callback: types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['frog']['frog_on_work'] == False:
        if users_[str(callback.from_user.id)]['frog']['frog_satiety'] >= 1:
            if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º')
                await bot.send_message(message.chat.id, 
                                 '''–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º üê∏! –ü–æ–∂–µ–ª–∞–π—Ç–µ –µ–π —É–¥–∞—á–∏ üçÄ!

üïî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º, –∫–∞–∫ –ø—Ä–æ—à—ë–ª —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                                 message_thread_id=message.message_thread_id)
                    
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True
                results = ('successful', 'successful', 'successful', 'error', 'escape')
                result = choice(results)
                await sleep(180)
                users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1
                if result == 'successful':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º.')
                    what_frog_do = choice(('—Å–æ—Å—Ç–∞–≤–ª—è—è –æ—Ç—á—ë—Ç—ã', '–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –∫–ª–∏–µ–Ω—Ç–∞–º'))
                    add = randint(100, 175)
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                        addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd
                    if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                        addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd

                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        add_r = add * int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank'])]))
                        users_[str(callback.from_user.id)]['user']['money'] += add_r
                    users_[str(callback.from_user.id)]['user']['money'] += add
                    text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å {what_frog_do}.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True or users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += '\n–ë–æ–Ω—É—Å—ã:'
                    for item in config['items_l']:
                        if users_[str(callback.from_user.id)]['frog']['items'][item]['player_has'] == True:
                            item_name = config['items_m'][item]
                            text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ {item_name}'
                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'

                elif result == 'error':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —Å–æ–≤–µ—Ä—à–∏–ª–∞ –æ—à–∏–±–∫—É –Ω–∞ —Ä–∞–±–æ—Ç–µ –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º')
                    text = '–û –Ω–µ—Ç! –í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —Å–æ–≤–µ—Ä—à–∏–ª–∞ –æ—à–∏–±–∫—É –∏ –µ—ë —É–≤–æ–ª–∏–ª–∏! –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏!'
                elif result == 'escape':
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —Å–±–µ–∂–∞–ª–∞ —Å —Ä–∞–±–æ—Ç—ã')
                    text = '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —Ä–µ—à–∏–ª–∞ —Å–±–µ–∂–∞—Ç—å —Å —Ä–∞–±–æ—Ç—ã... –ò —É –Ω–µ—ë –ø–æ–ª—É—á–∏–ª–æ—Å—å! –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏.'
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False
                await bot.send_message(message.chat.id,
                                 text,
                                 message_thread_id=message.message_thread_id)
        
            else:
                await bot.send_message(message.chat.id,
                                       '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                                       message_thread_id=message.message_thread_id)
    
        else:   
            await bot.send_message(message.chat.id,
                                   '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≥–æ–ª–æ–¥–Ω–∞ ü¶¥!',
                                   message_thread_id=message.message_thread_id)
    
    else:
        await bot.send_message(message.chat.id,
                               '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É–∂–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ!',
                               message_thread_id=message.message_thread_id)

    save_to_json('users/users', users_)

@dp.callback_query_handler(text = 'fb_w_thief')
async def robber(callback: types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['frog']['frog_on_work'] == False:
        if users_[str(callback.from_user.id)]['frog']['frog_satiety'] >= 1:
            if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
                users_[str(callback.from_user.id)]['frog']['has_been_thief'] = True
                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –≥—Ä–∞–±–∏—Ç–µ–ª–µ–º')
                await bot.send_message(message.chat.id,
                                 '''üîë –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É –≥—Ä–∞–±–∏—Ç–µ–ª–µ–º! –í—ã —Å–æ—à–ª–∏ —Å —É–º–∞?! –û–Ω–∞ –∂–µ –º–æ–∂–µ—Ç –ø–æ–ø–∞—Å—Ç—å –≤ —Ç—é—Ä—å–º—É!

üïî –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                                 message_thread_id=message.message_thread_id)
                    
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True
                results = ('successful', 'successful', 'successful', 'cops', 'cops', 'cops', 'cops', 'cops', 'cops', 'cops')
                result = choice(results)
                await sleep(180)
                users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1
                if result == 'successful':
                    what_frog_robbed = choice(('–∞–ø—Ç–µ–∫—É', '–∞–ø—Ç–µ–∫—É', '–∞–ø—Ç–µ–∫—É', '–º—É–∑–µ–π', '–º—É–∑–µ–π', '–º—É–∑–µ–π', '–¥–æ–º', '–¥–æ–º', '–¥–æ–º', '–¥–æ–º', '–±–∞–Ω–∫'))
                    if what_frog_robbed == '–∞–ø—Ç–µ–∫—É': add = randint(225, 290)
                    if what_frog_robbed == '–¥–æ–º': add = randint(150, 375)
                    if what_frog_robbed == '–±–∞–Ω–∫': add = randint(375, 500)
                    if what_frog_robbed == '–º—É–∑–µ–π': add = randint(475, 550)
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∞ {what_frog_robbed}')

                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                        addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd
                    if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                        addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                        addd -= add
                        addd = round(addd)
                        users_[str(callback.from_user.id)]['user']['money'] += addd

                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        add_r = add * int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank'])]))
                        users_[str(callback.from_user.id)]['user']['money'] += add_r
                    users_[str(callback.from_user.id)]['user']['money'] += add
                    text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∞ {what_frog_robbed}.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''

                    '''if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True or users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += '\n–ë–æ–Ω—É—Å—ã:'
                    if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                        text += f'\n - üíµ {add_lc} –∫–æ–∏–Ω–æ–≤ (–ö–æ–∏–Ω —É–¥–∞—á–∏)'''
                    for item in config['items_l']:
                        if users_[str(callback.from_user.id)]['frog']['items'][item]['player_has'] == True:
                            item_name = config['items_m'][item]
                            text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ {item_name}'
                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'

                elif result == 'cops':
                    users_[str(callback.from_user.id)]['frog']['frog_in_jail'] = True
                    users_[str(callback.from_user.id)]['frog']['has_been_in_jail'] = True
                    users_[str(callback.from_user.id)]['frog']['can_be_cop_after_thief'] = False
                    print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} –ø–æ–ø–∞–ª–∞—Å—å –ø–æ–ª–∏—Ü–∏–∏')
                    text = '–û –Ω–µ—Ç! –í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø–æ–ø–∞–ª–∞—Å—å –ø–æ–ª–∏—Ü–∏–∏ –∏ –µ—ë –ø–æ—Å–∞–¥–∏–ª–∏ –≤ —Ç—é—Ä—å–º—É! üò±'
                
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = False
                await bot.send_message(message.chat.id, 
                                 text,
                                 message_thread_id=message.message_thread_id)
            else:
                await bot.send_message(message.chat.id, 
                                 '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                                 message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, 
                             '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≥–æ–ª–æ–¥–Ω–∞ ü¶¥!',
                             message_thread_id=message.message_thread_id)
    else:
        await bot.send_message(message.chat.id, 
                         '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É–∂–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ!',
                         message_thread_id=message.message_thread_id)

@dp.callback_query_handler(text = 'fb_w_cleaner')
async def cleaner(callback: types.CallbackQuery):
    message = callback.message
    if users_[str(callback.from_user.id)]['frog']['frog_on_work'] == False:
        if users_[str(callback.from_user.id)]['frog']['frog_satiety'] >= 1:
            if users_[str(callback.from_user.id)]['frog']['frog_in_jail'] == False:
                print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É —É–±–æ—Ä—â–∏–∫–æ–º')
                bot.reply_to(message, '''–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞—à—É –ª—è–≥—É—à–∫—É –Ω–∞ —Ä–∞–±–æ—Ç—É —É–±–æ—Ä—â–∏–∫–æ–º üßπ!

üïî –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è –ø—Ä–∏–¥—ë—Ç —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã.''',
                             message_thread_id=message.message_thread_id)
                    
                users_[str(callback.from_user.id)]['frog']['frog_on_work'] = True
                await sleep(180)
                users_[str(callback.from_user.id)]['frog']['frog_satiety'] -= 1
                
                add = randint(50, 75)
                
                if users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['player_has'] == True:
                    addd = add * config['items_i']['lucky_coin'][str(users_[str(callback.from_user.id)]['frog']['items']['lucky_coin']['level'])]
                    addd -= add
                    addd = round(addd)
                    users_[str(callback.from_user.id)]['user']['money'] += addd
                if users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['player_has'] == True:
                    addd = add * config['items_i']['magic_diamond'][str(users_[str(callback.from_user.id)]['frog']['items']['magic_diamond']['level'])]
                    addd -= add
                    addd = round(addd)
                    users_[str(callback.from_user.id)]['user']['money'] += addd
                
                if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                    add_r = add * int(round(config['rank_multiplier'][str(users_[str(callback.from_user.id)]['frog']['rank'])]))
                    users_[str(callback.from_user.id)]['user']['money'] += add_r

                users_[str(callback.from_user.id)]['user']['money'] += add
                text = f'''–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —É–±–æ—Ä—â–∏–∫–æ–º, –µ–π –∑–∞–ø–ª–∞—Ç–∏–ª–∏ –∫–æ–ø–µ–π–∫–∏.
–í—ã –ø–æ–ª—É—á–∏–ª–∏:
 - üíµ {add} –∫–æ–∏–Ω–æ–≤'''
                
                for item in config['items_l']:
                    if users_[str(callback.from_user.id)]['frog']['items'][item]['player_has'] == True:
                        item_name = config['items_m'][item]
                        text += f'\n - üíµ {addd} –∫–æ–∏–Ω–æ–≤ {item_name}'
                    if users_[str(callback.from_user.id)]['frog']['rank'] != 1:
                        text += f'\n - üíµ {add_r} –∫–æ–∏–Ω–æ–≤ (–†–∞–Ω–≥)'
                    
                print(f'–õ—è–≥—É—à–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —É–±–æ—Ä—â–∏–∫–æ–º')

                await bot.send_message(message.chat.id,
                                       text,
                                       message_thread_id=message.message_thread_id)

            else:
                await bot.send_message(message.chat.id, 
                                 '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ —Å–≤–æ–±–æ–¥–µ, –∞ –Ω–µ –≤ —Ç—é—Ä—å–º–µ üîí!',
                                 message_thread_id=message.message_thread_id)
        else:
            await bot.send_message(message.chat.id, 
                             '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≥–æ–ª–æ–¥–Ω–∞ ü¶¥!',
                             message_thread_id=message.message_thread_id)
    else:
        await bot.send_message(message.chat.id, 
                         '–í–∞—à–∞ –ª—è–≥—É—à–∫–∞ —É–∂–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ!',
                         message_thread_id=message.message_thread_id)
    
    save_to_json('users/users', users_)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)